#!/bin/sh
# postinst script for pybit-web
#
# see: dh_installdeb(1)

set -e

# summary of how this script can be called:
#        * <postinst> `configure' <most-recently-configured-version>
#        * <old-postinst> `abort-upgrade' <new version>
#        * <conflictor's-postinst> `abort-remove' `in-favour' <package>
#          <new-version>
#        * <postinst> `abort-remove'
#        * <deconfigured's-postinst> `abort-deconfigure' `in-favour'
#          <failed-install-package> <version> `removing'
#          <conflicting-package> <version>
# for details, see http://www.debian.org/doc/debian-policy/ or
# the debian-policy package

ucf -p /etc/pybit/debian-db.pl
if [ -f /etc/pybit/debian-db.pl ]; then
  rm /etc/pybit/debian-db.pl
fi
# Source debconf library.
. /usr/share/debconf/confmodule
# source debconf stuff
. /usr/share/debconf/confmodule
# dbconfig doesn't have perl bindings, so we have to use shell.
. /usr/share/dbconfig-common/dpkg/postinst.pgsql
dbc_generate_include=perl:/etc/pybit/debian-db.pl
# minimal permissions
dbc_generate_include_owner="root:root"
dbc_generate_include_perms="600"
dbc_go pybit-web $@

case "$1" in
	configure)
	# write out the debconf non-database values to be processed into JSON
	db_get pybit-web/rabbitmqhost
	echo "rabbit=$RET" > /etc/pybit/debian-db.ini
	db_get pybit-web/hostname
	echo "host=$RET" >> /etc/pybit/debian-db.ini
	db_get pybit-web/port
	echo "port=$RET" >> /etc/pybit/debian-db.ini
	# JSON processing in shell is insane, use perl (which removes the .ini).
	/usr/share/pybit-web/pybit-web-json.pl
	fCode=0
	db_get pybit-web/db/dbname || fCode=$?
	if [ $fCode -eq 0 -a -n "$RET" ]; then
		dbc_dbname="$RET"
		adduser --debug --system --shell /bin/sh --home /var/lib/pybit-web --no-create-home $dbc_dbname
	fi
	dbc_share="/usr/share/dbconfig-common"
	dbc_package="pybit-web"
	dbc_basepackage=`echo $dbc_package | cut -d_ -f1`
	dbc_hardcoded_dbtype=pgsql
	dbc_dbtype="$dbc_hardcoded_dbtype"
	dbc_sqldir=$dbc_share/data/$dbc_basepackage/install/$dbc_dbtype
	if [ -d "$dbc_sqldir" ]; then
		dbc_logpart "populating database via sql... for $dbc_dbname $dbc_sqldir "
		su -s /bin/sh postgres -c "psql -d $dbc_dbname -c \"ALTER DATABASE $dbc_dbname OWNER TO $dbc_dbname;\""
		su -s /bin/sh $dbc_dbname -c "psql -d $dbc_dbname -f $dbc_sqlfile/schema.sql"
		dbc_logline "done"
	else
		dbc_logpart "sqlfile not found\n"
	fi
	;;

	abort-upgrade|abort-remove|abort-deconfigure)
	;;

	*)
		echo "postinst called with unknown argument \`$1'" >&2
		exit 1
	;;
esac

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.

#DEBHELPER#

exit 0
